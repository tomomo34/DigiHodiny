#include <virtuabotixRTC.h>
#include <Arduino.h>
virtuabotixRTC myRTC(6, 7, 8);
//clk,dat,rst
int outPin_s = 10;  // digital pin 8
int outPin_m = 11;
int outPin_h = 12;
int test = 0;
int reset = 3;
int buf_s = 0;
int sec = 0;
int m = 0;
int h = 0;
int lsec = 0;
int lm = 0;
int lh = 0;
int date = 0;
int month = 0;
int year = 0;
int cursor = 0;
int cursor_pos = 0;
int buttonPin = 5;
bool first = true;
bool force_reset_b = false;
bool editmode = false;
unsigned long buttonPressedTime = 0;
bool buttonPressed = false;
String x = "";

void setup() {
  pinMode(buttonPin, INPUT);
  pinMode(outPin_s, OUTPUT);
  pinMode(outPin_m, OUTPUT);
  pinMode(outPin_h, OUTPUT);
  pinMode(reset, OUTPUT);  // sets the digital pin as output
  digitalWrite(reset, HIGH);
  digitalWrite(reset, LOW);
  Serial.begin(115200);
  Serial.print('Serial');
  // seconds, minutes, hours, day of the week, day of the month, month, year
  //myRTC.setDS1302Time(00, 20, 18, 1, 26, 2, 2024);
  sec = myRTC.seconds;
  Serial.setTimeout(1);
}

void pulse(int num, int pin) {
  for (int i = 0; i < num; i++) {
    digitalWrite(pin, LOW);
    digitalWrite(pin, HIGH);
  }
  //posle pocet pulzu do pinu definovanyho v zadani
}
void wholereset() {
  digitalWrite(reset, HIGH);
  digitalWrite(reset, LOW);
  //resetuje cely system
}

void reset_s() {
  pulse(41, outPin_s);
}
void reset_m() {
  Serial.println("mreset ran");
  pulse(41, outPin_m);
}
void reset_h() {
  Serial.println("hresetran");
  pulse(77, outPin_h);
}
// ^^^^ Nepekny reseni ale funguje, nastavi jednotlivy citac na nula, musi se otestovat protoze chyba o jeden znamena spatny udaj.
void time_s() {
  sec = myRTC.seconds;
  //Serial.print("SCheck");
  if (sec != lsec) {
    Serial.print("Value changed to: ");
    Serial.println(sec);
    if (sec != 0) {
      pulse(1, outPin_s);
      Serial.println("++");
    } else {
      reset_s();
      Serial.println("reset");
    }
    lsec = sec;
  }
}
void time_m() {
  m = myRTC.minutes;
  //Serial.println("Mcheck");
  if (m != lm) {
    Serial.print("Value changed to: ");
    Serial.println(m);
    if (m != 0) {
      pulse(1, outPin_m);
      Serial.println("++m");
    } else {
      reset_m();
      Serial.println("reset");
    }
    lm = m;
  }
}
void time_h() {
  h = myRTC.hours;
  //Serial.println("Hcheck");
  if (h != lh) {
    Serial.print("Value changed to: ");
    Serial.println(h);
    if (h != 0) {
      pulse(1, outPin_h);
      Serial.println("++h");
    } else {
      reset_h();
      Serial.println("reset");
    }
    lh = h;
  }
}

void set_0(){
    pulse((sec - 1), outPin_s);
    pulse(m, outPin_m);
    pulse(h, outPin_h);
}

void showDate(bool reset_date, int date_keeponscreen_time){
  wholereset();
  date = myRTC.dayofmonth;
  month = myRTC.month;
  year = myRTC.year;
  Serial.println(month);
  Serial.println(date);
  Serial.println(year);
  pulse(date, outPin_h);
  pulse(month, outPin_m);
  pulse(year, outPin_s);
  delay(date_keeponscreen_time);
  first = reset_date;
  Serial.println("Date Shown, First was set to ");
  Serial.print(reset_date);
}
void processReceivedData(String data) {
  // Extract components
  String yr = data.substring(0, 4);
  String mth = data.substring(4, 6);
  String da = data.substring(6, 8);
  String ho = data.substring(8, 10);
  String mi = data.substring(10, 12);
  String seco = data.substring(12, 14);
  Serial.println("Year: " + yr);
  Serial.println("Month: " + mth);
  Serial.println("Day: " + da);
  Serial.println("Hour: " + ho);
  Serial.println("Minute: " + mi);
  Serial.println("Second: " + seco);
  myRTC.setDS1302Time(seco.toInt(), mi.toInt(), ho.toInt(), 1, da.toInt(), mth.toInt(), yr.toInt());
}

void loop() {
  int buttonState = digitalRead(buttonPin);
  time_s();
  time_m();
  time_h();
  myRTC.updateTime();
  sec = myRTC.seconds;
  m = myRTC.minutes;
  h = myRTC.hours;
  if (buttonState == HIGH) {
      showDate(true, 5000);
    }
  if (first == true) {
    myRTC.updateTime();
    sec = myRTC.seconds;
    m = myRTC.minutes;
    h = myRTC.hours;
    wholereset();
    set_0();
    if (first != false){
      first = false;
      Serial.println("First, was true -> set false");
    }
    else{
      Serial.println("Reset button presed");
    }
  }
  if (Serial.available() > 0) {
    x = Serial.readString();
    Serial.println("Received String: " + x);
    
    // Check if the received string is long enough
    if (x.length() >= 14) {
      processReceivedData(x);
      wholereset();
      first = true;
    } else {
      Serial.println("Invalid input length");
    }
  }
  delay(10);
}